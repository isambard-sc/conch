# SPDX-FileCopyrightText: Â© 2024 Matt Williams <matt.williams@bristol.ac.uk>
# SPDX-License-Identifier: MIT

name: Check

on: 
  push:
    branches:
      - "master"
  pull_request:
  workflow_call:
    inputs:
      ref:
        type: string
        default: ''

permissions:
  contents: read

jobs:
  licenses:
    name: License REUSE spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Install reuse
        run: |
          python -m venv ~/venv
          ~/venv/bin/pip install reuse
      - name: Check REUSE spec
        run: ~/venv/bin/reuse lint
  changelog:
    name: Changelog format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Install kacl
        run: |
          python -m venv ~/venv
          ~/venv/bin/pip install python-kacl
      - name: Check changelog format
        run: ~/venv/bin/kacl-cli verify
  code-checks:
    name: Tests and lints
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0  # This is needed so that git-describe works properly to set the version
      - name: install MUSL
        run: sudo apt install musl-tools
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-musl
          components: clippy, rustfmt
      - name: Install Hurl
        run: |
          VERSION=4.3.0
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/${VERSION}/hurl_${VERSION}_amd64.deb
          sudo dpkg -i hurl_${VERSION}_amd64.deb
      - uses: Swatinem/rust-cache@v2
      - name: Formatting
        run: cargo fmt --check
      - name: Linting
        run: cargo clippy
      - name: Build
        run: cargo build
      - name: Test
        run: cargo test
      - name: Integration tests
        run: |
          oci/build.sh
          tests/integration/integration.sh
        env:
          TERM: xterm-256color


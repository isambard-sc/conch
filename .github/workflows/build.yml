# SPDX-FileCopyrightText: Â© 2024 Matt Williams <matt.williams@bristol.ac.uk>
# SPDX-License-Identifier: MIT

name: Build artefacts

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true

permissions: {}

jobs:
  build-release:
    name: "Build release (${{ matrix.target }})"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || '' }}
          fetch-depth: 0  # This is needed so that git-describe works properly to set the version
      - name: install MUSL
        run: sudo apt install musl-tools
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release
      - name: Build OCI image
        run: oci/build.sh --release
      - name: Get version
        id: get_version
        run: |
          echo version="$(target/release/conch --version | tail -n1 | cut -d' ' -f 2)" >> "${GITHUB_OUTPUT}"
      - name: Get version for Helm
        id: get_helm_version
        run: |
          # if [ "${{ github.ref_name }}" == "master" ]]; then
            echo version="${{ steps.get_version.outputs.version }}" >> "${GITHUB_OUTPUT}"
          # else
          #   echo version="${{ steps.get_version.outputs.version }}.${{ github.ref_name }}" >> "${GITHUB_OUTPUT}"
          # fi
      - name: package helm chart
        run: |
          helm package helm/conch --version "${{ steps.get_helm_version.outputs.version }}" --app-version "${{ steps.get_version.outputs.version }}"
      - name: Log in to GHCR
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Log in to Helm GHCR
        run: echo $GITHUB_TOKEN | helm registry login "ghcr.io/${{ github.repository_owner }}" --username "${{ github.actor }}" --password-stdin
        env:
          GITHUB_TOKEN: "${{ github.token }}"
      - name: Publish OCI image
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: conch
          tags: ${{ steps.get_version.outputs.version }}
          registry: ghcr.io/${{ github.repository_owner }}
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push-to-ghcr.outputs.digest }}
          push-to-registry: true
      - name: Push Helm chart
        run: helm push "./conch-${{ steps.get_helm_version.outputs.version }}.tgz" "oci://ghcr.io/${{ github.repository_owner }}/charts"
      - name: Store build artefacts
        uses: actions/upload-artifact@v4
        with:
          name: conch
          path: |
            target/release/conch
